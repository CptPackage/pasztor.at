---
version: '3.2'
services:
  traefik:
    build:
      context: images/traefik
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /srv/acme:/etc/traefik/acme
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - "BACKUP_DEST=s3://${ACME_BUCKET_NAME}"
      - "BACKUP_ENDPOINT=https://sos-${EXOSCALE_REGION}.exo.io"
      - "BACKUP_BUCKETURL=%(bucket)s.sos-${EXOSCALE_REGION}.exo.io"
      - "EXOSCALE_KEY=${EXOSCALE_KEY}"
      - "EXOSCALE_SECRET=${EXOSCALE_SECRET}"
    networks:
      internal:
        ipv4_address: 172.28.1.2
    restart: always
  nginx:
    build:
      context: images/nginx
    volumes:
      - /srv/www:/var/www
    labels:
      traefik.enable: "true"
      traefik.backend: "nginx"
      traefik.frontend.rule: "Host:${DOMAIN}"
      traefik.port: "80"
      traefik.protocol: "http"
      traefik.frontend.headers.SSLTemporaryRedirect: "false"
      traefik.frontend.headers.SSLRedirect: "true"
      traefik.frontend.headers.STSSeconds: "315360000"
      traefik.frontend.headers.STSIncludeSubdomains: "true"
      traefik.frontend.headers.STSPreload: "true"
      traefik.frontend.headers.forceSTSHeader: "false"
    restart: always
    networks:
      internal:
        ipv4_address: 172.28.1.3
  pull:
    build:
      context: images/pull
    environment:
      - "PULL_SOURCE=s3://${CONTENT_BUCKET_NAME}"
      - "PULL_ENDPOINT=https://sos-${EXOSCALE_REGION}.exo.io"
      - "PULL_BUCKETURL=%(bucket)s.sos-${EXOSCALE_REGION}.exo.io"
      - "EXOSCALE_KEY=${EXOSCALE_KEY}"
      - "EXOSCALE_SECRET=${EXOSCALE_SECRET}"
    volumes:
      - /srv/www:/var/www
      - /srv/monitoring/pull:/srv/monitoring
    networks:
      internal:
        ipv4_address: 172.28.1.4
    restart: always
  backup:
    build:
      context: images/backup
    environment:
      - "BACKUP_DEST=s3://${ACME_BUCKET_NAME}"
      - "BACKUP_ENDPOINT=https://sos-${EXOSCALE_REGION}.exo.io"
      - "BACKUP_BUCKETURL=%(bucket)s.sos-${EXOSCALE_REGION}.exo.io"
      - "EXOSCALE_KEY=${EXOSCALE_KEY}"
      - "EXOSCALE_SECRET=${EXOSCALE_SECRET}"
    volumes:
      - /srv/acme:/srv/acme
      - /srv/monitoring/backup:/srv/monitoring
    networks:
      internal:
        ipv4_address: 172.28.1.5
    restart: always
  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:0.3.0
    command:
      - "-nginx.scrape-uri"
      - "http://nginx:80/.well-known/nginx/basic_status"
    networks:
      internal:
        ipv4_address: 172.28.1.6
    restart: always
    depends_on:
      - nginx
  node-exporter:
    image: quay.io/prometheus/node-exporter
    pid: "host"
    volumes:
      - "/:/host:ro,rslave"
    command:
      - "--path.rootfs"
      - "/host"
      - "--collector.textfile"
      - "--collector.textfile.directory"
      - "/host/srv/monitoring/*.timestamp"
    networks:
      internal:
        ipv4_address: 172.28.1.7
    restart: always
  container-exporter:
    image: prom/container-exporter
    volumes:
      - "/sys/fs/cgroup:/cgroup"
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      internal:
        ipv4_address: 172.28.1.8
    restart: always
  prometheus:
    build:
      context: images/prometheus
    ports:
      - "9090:9090"
    networks:
      internal:
        ipv4_address: 172.28.1.9
    volumes:
      - "/srv/prometheus:/prometheus-data"
    restart: always
    depends_on:
      - nginx-exporter
      - node-exporter
  php:
    build:
      context: images/php
    volumes:
      - /srv/www:/var/www
    restart: always
    networks:
      internal:
        ipv4_address: 172.28.1.10
networks:
  internal:
    driver: bridge
    ipam:
        driver: default
        config:
            - subnet: 172.28.0.0/16
